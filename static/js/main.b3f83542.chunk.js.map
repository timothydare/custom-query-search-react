{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["url","fetch","method","cache","response","json","data","headers","body","JSON","stringify","formatData","value","metricDefinition","formattedValue","dataType","toFixed","decimalPlaces","App","useState","restaurantIds","setRestaurantIds","toDate","setToDate","fromDate","setFromDate","fromHour","setFromHour","toHour","setToHour","metricDefinitions","setMetricDefinitions","results","setResults","activePage","setActivePage","metricCode","compareType","metricCriteria","setmetricCriteria","useEffect","getData","then","submit","postData","metricCodeOptions","map","m","key","text","alias","options","Restaurant","r","Id","Name","hourOptions","compareTypeOptions","handleCriteriaAdd","handleMetricCriteriaChange","property","index","newArray","indexOfLastResult","indexOfFirstResult","transactionDataPaginated","slice","console","log","Container","className","Form","onSubmit","Dropdown","fluid","multiple","selection","onChange","event","name","handleChange","allowPast","dateFormat","startDate","endDate","defaultMonth","mc","e","type","target","Number","parseInt","length","Button","onClick","splice","handleCriteriaRemove","Fragment","Table","celled","Header","Row","HeaderCell","md","textAlign","Body","d","Cell","find","x","restaurantId","busDt","orderNumber","orderTime","metricCodeName","charAt","toLowerCase","Footer","colSpan","Pagination","floated","onPageChange","pageNumber","totalPages","Math","ceil","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3f83542.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"./App.css\";\nimport {\n  Button,\n  Container,\n  Dropdown,\n  Form,\n  Pagination,\n  Table,\n} from \"semantic-ui-react\";\nimport { useState, useEffect } from \"react\";\nimport { ReactDatez } from \"react-datez\";\nimport React from \"react\";\nimport Restaurant from \"./RestaurantData.json\";\n\nfunction App() {\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [toDate, setToDate] = useState(\"\");\n  const [fromDate, setFromDate] = useState(\"\");\n  const [fromHour, setFromHour] = useState();\n  const [toHour, setToHour] = useState();\n  const [metricDefinitions, setMetricDefinitions] = useState([]);\n  const [results, setResults] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n  const [metricCriteria, setmetricCriteria] = useState([\n    {\n      metricCode: \"\",\n      compareType: \"\",\n      value: 0,\n    },\n  ]);\n\n  useEffect(() => {\n    getData(\n      \"https://customsearchquerytoolapi.azurewebsites.net/Search/MetricDefinitions\"\n    ).then((data) => {\n      setMetricDefinitions(data);\n    });\n  }, []);\n\n  const submit = () => {\n    const input = {\n      restaurantIds: restaurantIds,\n      fromDate: fromDate,\n      toDate: toDate,\n      fromHour: fromHour,\n      toHour: toHour,\n      metricCriteria: metricCriteria,\n    };\n    postData(\n      \"https://customsearchquerytoolapi.azurewebsites.net/Search/Query\",\n      input\n    ).then((data) => {\n      setResults(data);\n    });\n  };\n\n  const metricCodeOptions = metricDefinitions.map((m) => {\n    return {\n      key: m.metricCode,\n      value: m.metricCode,\n      text: m.alias,\n    };\n  });\n\n  const options = Restaurant.map((r) => {\n    return {\n      key: r.Id,\n      value: r.Id,\n      text: r.Name,\n    };\n  });\n\n  const hourOptions = [\n    { key: 6, text: \"6 am\", value: 6 },\n    { key: 7, text: \"7 am\", value: 7 },\n    { key: 8, text: \"8 am\", value: 8 },\n    { key: 9, text: \"9 am\", value: 9 },\n    { key: 10, text: \"10 am\", value: 10 },\n    { key: 11, text: \"11 am\", value: 11 },\n    { key: 12, text: \"12 am\", value: 12 },\n    { key: 13, text: \"1 pm\", value: 13 },\n    { key: 14, text: \"2 pm\", value: 14 },\n    { key: 15, text: \"3 pm\", value: 15 },\n    { key: 16, text: \"4 pm\", value: 16 },\n    { key: 17, text: \"5 pm\", value: 17 },\n    { key: 18, text: \"6 pm\", value: 18 },\n    { key: 19, text: \"7 pm\", value: 19 },\n    { key: 20, text: \"8 pm\", value: 20 },\n    { key: 21, text: \"9 pm\", value: 21 },\n    { key: 22, text: \"10 pm\", value: 22 },\n    { key: 23, text: \"11 pm\", value: 23 },\n    { key: 24, text: \"12 pm\", value: 24 },\n    { key: 25, text: \"1 am (next day)\", value: 25 },\n    { key: 26, text: \"2 am (next day)\", value: 26 },\n    { key: 27, text: \"3 am (next day)\", value: 27 },\n    { key: 28, text: \"4 am (next day)\", value: 28 },\n    { key: 29, text: \"5 am (next day)\", value: 29 },\n  ];\n\n  const compareTypeOptions = [\n    { key: \"Equal\", text: \"=\", value: \"Equal\" },\n    { key: \"LessThan\", text: \"<\", value: \"LessThan\" },\n    { key: \"LessThanOrEqual\", text: \"≤\", value: \"LessThanOrEqual\" },\n    { key: \"GreaterThan\", text: \">\", value: \"GreaterThan\" },\n    { key: \"GreaterThanOrEqual\", text: \"≥\", value: \"GreaterThanOrEqual\" },\n  ];\n\n  const handlePaginationChange = (pageNumber) => {\n    setActivePage(pageNumber);\n    console.log(pageNumber);\n  };\n\n  const handleCriteriaAdd = () => {\n    setmetricCriteria([\n      ...metricCriteria,\n      {\n        metricCode: \"\",\n        compareType: \"\",\n        value: 0,\n      },\n    ]);\n  };\n\n  const handleCriteriaRemove = (index) => {\n    const newArray = [...metricCriteria];\n    newArray.splice(index, 1);\n    setmetricCriteria(newArray);\n  };\n\n  const handleMetricCriteriaChange = (property, index, value) => {\n    const newArray = [...metricCriteria];\n    newArray[index][property] = value;\n    setmetricCriteria(newArray);\n  };\n  \n  const indexOfLastResult = activePage * 10;\n  const indexOfFirstResult = indexOfLastResult - 10;\n  const transactionDataPaginated = results.slice(\n    indexOfFirstResult,\n    indexOfLastResult\n  );\n\n  console.log(results);\n  console.log(metricDefinitions);\n  console.log(metricCriteria);\n\n  return (\n    <Container>\n      <div className=\"landing__title\">\n        <h1 className=\"title\">Delaget Custom Query Search Tool</h1>\n      </div>\n      <h2 className=\"landing__subtitle\">Select your desired inputs</h2>\n      <Form onSubmit={() => submit()}>\n        <div className=\"form-wrapper\">\n          <div className=\"restaurant-form\">\n            <h4 className=\"form-title\">RESTAURANT</h4>\n            <label>Restaurant Ids</label>\n            <Dropdown\n              fluid\n              multiple\n              selection\n              options={options}\n              value={restaurantIds}\n              onChange={(event, data) => {\n                setRestaurantIds(data.value);\n              }}\n            />\n          </div>\n          <div className=\"calendar-forms\">\n            <div className=\"form-date\">\n              <h4 className=\"form-title\">DATE</h4>\n              <label>From Date</label>\n              <ReactDatez\n                name=\"fromDate\"\n                handleChange={(value) => {\n                  setFromDate(value);\n                }}\n                value={fromDate}\n                allowPast={true}\n                dateFormat={\"MM/DD/YYYY\"}\n                startDate={\"2021-10-01\"}\n                endDate={\"2021-10-31\"}\n                defaultMonth={\"2021-10-01\"}\n              />\n            </div>\n            <div className=\"form-date\">\n              <label>To Date</label>\n              <ReactDatez\n                name=\"toDate\"\n                handleChange={(value) => {\n                  setToDate(value);\n                }}\n                value={toDate}\n                allowPast={true}\n                dateFormat={\"MM/DD/YYYY\"}\n                startDate={\"2021-10-01\"}\n                endDate={\"2021-10-31\"}\n                defaultMonth={\"2021-10-01\"}\n              />\n            </div>\n          </div>\n          <div className=\"time-forms\">\n            <h4 className=\"form-title\">TIME</h4>\n            <label>From Hour</label>\n            <Dropdown\n              fluid\n              selection\n              options={hourOptions}\n              onChange={(event, data) => {\n                setFromHour(data.value);\n              }}\n            />\n            <label>To Hour</label>\n            <Dropdown\n              fluid\n              selection\n              options={hourOptions}\n              onChange={(event, data) => {\n                setToHour(data.value);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"metric__title\">\n          <h4>METRIC CRITERIA</h4>\n        </div>\n        {metricCriteria.map((mc, index) => (\n          <>\n            <div key={index} className=\"metric-forms\">\n              <div className=\"metric__code--form\">\n                <label>Metric Code</label>\n                <Dropdown\n                  fluid\n                  selection\n                  options={metricCodeOptions}\n                  value={mc.metricCode}\n                  onChange={(e, data) =>\n                    handleMetricCriteriaChange(\n                      \"metricCode\",\n                      index,\n                      data.value\n                    )\n                  }\n                />\n              </div>\n              <div className=\"metric__compare--form\">\n                <label>Compare Type</label>\n                <Dropdown\n                  fluid\n                  selection\n                  options={compareTypeOptions}\n                  value={mc.compareType}\n                  onChange={(e, data) =>\n                    handleMetricCriteriaChange(\n                      \"compareType\",\n                      index,\n                      data.value\n                    )\n                  }\n                />\n              </div>\n              <div className=\"metric__value--form\">\n                <label>Value</label>\n                <input\n                  name=\"value\"\n                  type=\"number\"\n                  value={mc.value}\n                  onChange={(e) =>\n                    handleMetricCriteriaChange(\n                      e.target.name,\n                      index,\n                      Number.parseInt(e.target.value)\n                    )\n                  }\n                ></input>\n              </div>\n              {metricCriteria.length > 1 && (\n                <Button \n                  type=\"button\"\n                  className=\"remove__criteria--button\"\n                  onClick={() => handleCriteriaRemove(index)}\n                >\n                  Remove Criteria\n                </Button>\n              )}\n            </div>\n            {metricCriteria.length - 1 === index && metricCriteria.length < 5 && (\n              <div className=\"remove__button--wrapper\">\n                <Button\n                  className=\"add__criteria--button\"\n                  onClick={handleCriteriaAdd}\n                >\n                  Add Criteria\n                </Button>\n              </div>\n            )}\n          </>\n        ))}\n        <div className=\"submit__button--wrapper\">\n          <Button className=\"submit__button\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </Form>\n      <div className=\"results__title\">\n        <h4>RESULTS</h4>\n      </div>\n      {results.length === 0 ? (\n        <React.Fragment>\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Restaurant</Table.HeaderCell>\n                <Table.HeaderCell>Business Date</Table.HeaderCell>\n                <Table.HeaderCell>Order number</Table.HeaderCell>\n                <Table.HeaderCell>Order time</Table.HeaderCell>\n                {metricDefinitions.map((md) => {\n                  return (\n                    <Table.HeaderCell textAlign=\"center\">\n                      {md.alias}\n                    </Table.HeaderCell>\n                  );\n                })}\n              </Table.Row>\n            </Table.Header>\n          </Table>\n          <p className=\"no__results\">No Results</p>\n        </React.Fragment>\n      ) : (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Restaurant</Table.HeaderCell>\n              <Table.HeaderCell>Business Date</Table.HeaderCell>\n              <Table.HeaderCell>Order number</Table.HeaderCell>\n              <Table.HeaderCell>Order time</Table.HeaderCell>\n              {metricDefinitions.map((md) => {\n                return (\n                  <Table.HeaderCell textAlign=\"center\">\n                    {md.alias}\n                  </Table.HeaderCell>\n                );\n              })}\n            </Table.Row>\n          </Table.Header>\n          <React.Fragment>\n            <Table.Body> \n              {transactionDataPaginated.map((d) => {\n                return (\n                  <Table.Row>\n                    <Table.Cell>\n                      {Restaurant.find(\n                        (x) => x.Id === d.restaurantId\n                      ).Name.slice(14)}\n                    </Table.Cell>\n                    <Table.Cell>{d.busDt.slice(0, 10)}</Table.Cell>\n                    <Table.Cell>{d.orderNumber}</Table.Cell>\n                    <Table.Cell>{d.orderTime.slice(11, 16)}</Table.Cell>\n                    {metricDefinitions.map((m) => {\n                      const metricCodeName =\n                        m.metricCode.charAt(0).toLowerCase() +\n                        m.metricCode.slice(1);\n                      console.log(metricCodeName);\n                      return (\n                        <Table.Cell textAlign=\"center\">\n                          {formatData(d[metricCodeName], m)}\n                        </Table.Cell>\n                      );\n                    })}\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan=\"12\">\n                  <Pagination\n                    floated=\"right\"\n                    className=\"table__pagination\"\n                    activePage={activePage}\n                    onPageChange={(event, data) =>\n                      handlePaginationChange(data.activePage)\n                    }\n                    totalPages={Math.ceil(results.length / 10)}\n                  ></Pagination>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </React.Fragment>\n        </Table>\n      )}\n    </Container>\n  );\n}\n\nasync function getData(url = \"\") {\n  const response = await fetch(url, {\n    method: \"GET\",\n    cache: \"no-cache\",\n  });\n\n  return response.json();\n}\n\nasync function postData(url = \"\", data = {}) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  return response.json();\n}\n\nfunction formatData(value, metricDefinition) {\n  let formattedValue = \"\";\n\n  switch (metricDefinition.dataType) {\n    case \"Money\":\n      formattedValue = `$ ${value.toFixed(metricDefinition.decimalPlaces)}`;\n      break;\n\n    case \"Percent\":\n      formattedValue = `${value.toFixed(metricDefinition.decimalPlaces)} %`;\n      break;\n\n    default:\n      formattedValue = value.toFixed(metricDefinition.decimalPlaces);\n      break;\n  }\n\n  return formattedValue;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-datez/dist/css/react-datez.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}